[tool.poetry]
name = "QDMpy"
version = "0.0.1"
description = "A python package for calculating magnetic maps from ODMR spectra measured on a quantum diamond microscope"
authors = [
    "Michael Volk <michaelvolk1979@gmail.com>",
]
license = "MIT"
readme = "README.md"

documentation = "https://mikevolk.github.io/QDMpy"
homepage = "https://mikevolk.github.io/QDMpy"
repository = "https://github.com/mikevolk/QDMpy"

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

packages = [
    { include = "QDMpy", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.9, <3.11"
scikit-image = "^0.19.3"
scikit-learn = "^1.1.3"
tomli = "^2.0.1"
mat73 = "^0.59"
numpy = "^1.22"
numba = "^0.56.0"
scipy = "^1.9.1"
#coloredlogs = "^15.0.1"
pygpufit = [{ path = "src/pyGpufit/win/pyGpufit-1.2.0-py2.py3-none-any.whl", markers = "sys_platform == 'win32'" },
    { path = "src/pyGpufit/linux/pyGpufit-1.2.0-py2.py3-none-any.whl", markers = "sys_platform == 'linux'" },
]
pypole = "^0.1.1"
pint = "^0.20.1"
PySide6 = "^6.2.0"
matplotlib = "^3.5.3"
matplotlib-scalebar = "^0.8.1"
superqt = "^0.3.5"

[tool.poetry.dev-dependencies]
jupyterlab = "^3.4.5"
ipywidgets = "^8.0.4"
pandas = "^1.4.3"
autoflake = "*"
black = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
isort = "*"
mkdocstrings = "*"
mkdocs-material = "*"
mkdocstrings-python = "*"
argparse = "^1.4.0"
mypy = "*"
pep8-naming = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
pyupgrade = "*"
tryceratops = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
target-version = ["py310"]
include = '\.pyi?$'

[tool.pytest.ini_options]
addopts = """\
    --cov QDMpy \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
#disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
#warn_return_any = true
check_untyped_defs = true
show_error_codes = true
ignore_missing_imports = true
warn_no_return = false
